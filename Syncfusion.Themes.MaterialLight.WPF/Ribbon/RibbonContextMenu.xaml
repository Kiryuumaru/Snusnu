<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:tools="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF"
    xmlns:provider="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:windows_shared="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <provider:ResourceDictionaryProvider DictionaryName="Common" ThemeName="MaterialLight"/>
        <provider:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="MaterialLight"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/MSControl/Separator.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/MSControl/Menu.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/Ribbon/RibbonTab.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <tools:SizeToDoubleConverter x:Key="SizeToDoubleConverter" />

    <!--  SeparatorStyle  -->
    <Style x:Key="SeparatorStyle" BasedOn="{StaticResource WPFSeparatorStyle}" TargetType="Separator" >
        <Setter Property="Border.BorderThickness" Value="{StaticResource MaterialLight.BorderThickness0001}" />
        <Setter Property="FrameworkElement.MinHeight" Value="2" />
        <Setter Property="Margin" Value="30,0,0,0" />
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Padding" Value="14,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  RibbonContextMenuItems  -->
    <ItemsControl x:Key="RibbonContextMenuItems">
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.RemoveItemFromQAT"
            Header="{Binding Source={StaticResource ResourceWrapperKey}, Path=RemoveFromQAT}"
            Tag="Remove"
            Visibility="Collapsed" />
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.AddItemToQAT"
            Header="{Binding Source={StaticResource ResourceWrapperKey}, Path=AddToQAT}"
            Tag="Item_One"
            Visibility="Collapsed" />
        <Separator Style="{StaticResource SeparatorStyle}" Tag="Item_Two" />
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.QATMoreCommands"
            Header="{Binding Source={StaticResource ResourceWrapperKey}, Path=CustomizeQATContextMenu}"
            Tag="Item_Three"/>
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.PlaceQATAbove"
            Header="{Binding Source={StaticResource ResourceWrapperKey}, Path=QATShowAbove}"
            Tag="Item_Four"
            Visibility="Collapsed" />
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.PlaceQATBelow"
            Header="{Binding Source={StaticResource ResourceWrapperKey}, Path=QATShowBelow}"
            Tag="Item_Five" />
        <Separator Style="{StaticResource SeparatorStyle}" Tag="Item_Six" />
        <tools:RibbonMenuItem
            Margin="0,0,0,0"
            Command="tools:RibbonCommands.MinimizeRibbon"
            Header="{Binding Source={StaticResource ResourceWrapperKey}, Path=MinimizeRibbon}"
            Tag="Item_Seven">
            <tools:RibbonMenuItem.Icon>
                <Path Stroke="{StaticResource BorderAlt}" StrokeThickness="1.4">
                    <Path.Data>
                        <GeometryGroup>
                            <LineGeometry StartPoint="6 9" EndPoint="9 16" />
                            <LineGeometry StartPoint="9 16" EndPoint="13 3" />
                        </GeometryGroup>
                    </Path.Data>
                </Path>
            </tools:RibbonMenuItem.Icon>
        </tools:RibbonMenuItem>
    </ItemsControl>

    <!--  RibbonMenuItem style  -->
    <Style x:Key="SyncfusionRibbonMenuItemStyle" TargetType="{x:Type tools:RibbonMenuItem}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource PopupBackground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialLight.ThemeFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialLight.BorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonMenuItem}">
                    <Border Name="Bd">
                        <Grid Grid.ColumnSpan="3">
                            <Border
                                Name="Border"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="17" />
                                    </Grid.ColumnDefinitions>

                                    <Rectangle
                                        Name="InnerPath"
                                        Grid.ColumnSpan="4"
                                        SnapsToDevicePixels="True" />

                                    <Border
                                        Name="IconBorder"
                                        Grid.Column="0"
                                        BorderThickness="{StaticResource MaterialLight.BorderThickness1}">
                                        <ContentPresenter
                                            x:Name="IconContent"
                                            Width="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=width, RelativeSource={RelativeSource TemplatedParent}}"
                                            Height="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=height, RelativeSource={RelativeSource TemplatedParent}}"
                                            Margin="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding Icon}"
                                            RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                    </Border>

                                    <Border
                                        Name="PART_CheckBorder"
                                        Grid.Column="0"
                                        Width="20"
                                        Height="20"
                                        Background="Transparent"
                                        BorderThickness="{StaticResource MaterialLight.BorderThickness1}"
                                        CornerRadius="0"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Path
                                            x:Name="Glyph"
                                            Width="8"
                                            Height="8"
                                            Data="M10.738967,0 L11.817,1.1360061 5.1774399,7.4388217 5.1789999,7.4406547 4.0474274,8.5560006 0,3.7727338 1.1959616,2.7609998 4.1605471,6.244079 z"
                                            Fill="{StaticResource IconColor}"
                                            FlowDirection="LeftToRight"
                                            Stretch="Fill" />
                                    </Border>

                                    <ContentPresenter
                                        Name="content"
                                        Grid.Column="1"
                                        Margin="11,0,10,0"
                                        VerticalAlignment="Center"
                                        ContentSource="Header"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        TextElement.FontFamily="{TemplateBinding FontFamily}">
                                        <ContentPresenter.Resources>
                                            <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                                        </ContentPresenter.Resources>
                                        <ContentPresenter.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                                                        <Setter Property="TextElement.FontSize" Value="13" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentPresenter.Style>
                                    </ContentPresenter>
                                    <Path
                                        Grid.Column="2"
                                        Width="17"
                                        Margin="4,0,0,0"
                                        VerticalAlignment="Center"
                                        Data="M0,0L4,3.5 0,7z"
                                        Fill="{TemplateBinding Foreground}"
                                        Visibility="{TemplateBinding HasItems,
                                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <Popup
                                        Name="PART_Popup"
                                        MinWidth="10"
                                        MinHeight="10"
                                        AllowsTransparency="true"
                                        Focusable="false"
                                        HorizontalOffset="1"
                                        IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                        Placement="Right"
                                        PopupAnimation="Fade"
                                        StaysOpen="False"
                                        VerticalOffset="0">

                                        <Border BorderThickness="{StaticResource MaterialLight.BorderThickness1}"
                                                Effect="{StaticResource Default.ShadowDepth3}">
                                            <Grid>
                                                <Rectangle
                                                    Width="25"
                                                    HorizontalAlignment="Left"
                                                    Fill="{TemplateBinding Background}"
                                                    RadiusX="2"
                                                    Visibility="{TemplateBinding IconBarEnabled,
                                                                                 Converter={StaticResource BooleanToVisibilityConverter}}" />

                                                <ScrollViewer
                                                    Grid.ColumnSpan="2"
                                                    Margin="0,0,1,0"
                                                    CanContentScroll="True"
                                                    Style="{StaticResource WPFMenuScrollViewer}">
                                                    <ItemsPresenter
                                                        Name="Presenter"
                                                        Grid.IsSharedSizeScope="true"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                                <Condition Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                        </MultiTrigger>
                        <Trigger Property="MenuItem.IsChecked" Value="True">
                            <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{StaticResource ContentForeground}" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="IconContent" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="TextElement.FontSize" Value="13" />
                            <Setter Property="Padding" Value="14,9,14,9" />
                            <Setter Property="MinHeight" Value="40"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonMenuItemStyle}" TargetType="{x:Type tools:RibbonMenuItem}" />

    <!--  RibbonContextMenu Style  -->
    <Style x:Key="SyncfusionRibbonContextMenuStyle"
        BasedOn="{StaticResource WPFContextMenuStyle}"
        TargetType="{x:Type tools:RibbonContextMenu}">
        <Setter Property="Panel.Background" Value="{StaticResource PopupBackground}" />
        <Setter Property="MenuItem.Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Border.BorderThickness" Value="{StaticResource MaterialLight.BorderThickness1}" />
        <Setter Property="ContextMenuService.HasDropShadow" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SyncfusionRibbonMenuItemStyle}" />
        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource RibbonContextMenuItems}, Path=Items}" />
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonContextMenuStyle}" TargetType="{x:Type tools:RibbonContextMenu}" />

</ResourceDictionary>
