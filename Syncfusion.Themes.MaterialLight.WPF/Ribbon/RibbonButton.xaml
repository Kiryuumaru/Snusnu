<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:provider="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:tools="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF"
    xmlns:windows_shared="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <provider:ResourceDictionaryProvider DictionaryName="Common" ThemeName="MaterialLight"/>
        <provider:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="MaterialLight"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialLight.WPF;component/MSControl/Button.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <shared:DisableEffect x:Key="DisableEffect" />
    
    <!--  RibbonButtonChecker Style  -->
    <Style x:Key="SyncfusionRibbonButtonCheckerStyle" TargetType="{x:Type tools:RibbonButtonChecker}">
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonButtonChecker}">
                    <Border
                        Background="{StaticResource SecondarySelectionBackground}"
                        BorderBrush="{StaticResource SecondarySelectionBackground}"
                        BorderThickness="{StaticResource MaterialLight.BorderThickness1}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonButtonCheckerStyle}" TargetType="{x:Type tools:RibbonButtonChecker}" />

    <!--  ButtonPanel  -->
    <Style x:Key="SyncfusionButtonPanelStyle" TargetType="{x:Type tools:ButtonPanel}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:ButtonPanel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0"
                            Height="{TemplateBinding Height}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{StaticResource MaterialLight.BorderThickness}"
                            ClipToBounds="True">
                            <ItemsPresenter />
                        </Border>
                        <Rectangle
                            Grid.Column="1"
                            Width="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Fill="{StaticResource SecondaryHoverBackground}"
                            Stroke="{StaticResource SecondaryHoverBackground}"
                            Visibility="{TemplateBinding SeparatorVisibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="MinHeight" Value="42" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <tools:ButtonLayoutPanel ClipToBounds="True" SeparatorBrush="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger  Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                <Setter Property="Margin" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionButtonPanelStyle}" TargetType="{x:Type tools:ButtonPanel}" />

    <DataTemplate x:Key="RibbonItemVectorImageTemplate">
        <Grid>
            <Viewbox Name="VectorImage">
                <Viewbox.Child>
                    <Grid x:Name="PathGrid" />
                </Viewbox.Child>
            </Viewbox>
        </Grid>
    </DataTemplate>

  <DataTemplate x:Key="RibbonButtonIconTemplate">
        <Grid>
            <Image RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="{Binding IconStretch, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonButton}}}" 
 x:Name="PART_Image" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent }}" />
        </Grid>
    </DataTemplate>
	
  <!--  RibbonButton style  -->
    <Style x:Key="SyncfusionRibbonButtonStyle" TargetType="{x:Type tools:RibbonButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialLight.BorderThickness1}" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialLight.ThemeFontFamily}"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="CornerRadius" Value="{StaticResource MaterialLight.ThemeCornerRadiusVariant1}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="LargeIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt32.png" />
        <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png" />
        <Setter Property="MediumIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt20.png"/>
        <Style.Triggers>

            <Trigger Property="SizeForm" Value="ExtraSmall">
                <Setter Property="Padding" Value="3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Border
                                Name="OuterBorder"
                                MinHeight="22"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsEnabled="{TemplateBinding IsEnabled}">
                                <ContentPresenter Name="IconContent" Margin="{TemplateBinding Padding}" Height="16" Width="16" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsPressed" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                   <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMenuItem" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </MultiTrigger>

                                <Trigger Property="IsPressed" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />

                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource DisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                                    <Setter Property="Padding" Value="5" />
                                    <Setter Property="MinHeight" TargetName="IconContent" Value="20"/>
                                    <Setter Property="MinWidth" TargetName="IconContent" Value="20"/>
                                    <Setter TargetName="OuterBorder" Property="MinWidth" Value="47" />
                                    <Setter TargetName="OuterBorder" Property="MinHeight" Value="30" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="SizeForm" Value="Small">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Border
                                    Name="OuterBorder"
                                    MinHeight="22"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    IsEnabled="{TemplateBinding IsEnabled}">
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="PART_ImageBorder"
                                            Grid.Column="0"
                                            Margin="1">
                                            <ContentPresenter Name="IconContent" Height="16" Width="16" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                                        </Border>
                                        <tools:RibbonAutomatableTextBlock
                                            x:Name="label"
                                            Grid.Column="1"
                                            Margin="2,2,4,0"
                                            HorizontalAlignment="Left"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding Label}" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                   <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IsSmallImageVisible" Value="False"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImageBorder" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                                    <Setter TargetName="OuterBorder" Property="Padding" Value="3"/>
                                    <Setter TargetName="label" Property="Margin" Value="6,2,15,0"/>
                                    <Setter TargetName="label" Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </MultiTrigger>

                                <Trigger Property="IsPressed" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource DisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Padding" Value="4"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="5,2,2,2"/>
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="Normal"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Padding" Value="5" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="SizeForm" Value="Large">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Border
                                Name="OuterBorder"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonButton}}}" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonButton}}}">
                                    <StackPanel Orientation="Vertical">
                                        <Border
                                            Name="PART_ImageBorder"
                                            Margin="3"
                                            SnapsToDevicePixels="True">
                                            <ContentPresenter Name="IconContent" Height="32" Width="32" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                                        </Border>
                                        <ItemsControl
                                            x:Name="PART_Label"
                                            Margin="0,3,0,2"
                                            Focusable="False"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            Foreground="{TemplateBinding Foreground}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <tools:MultilinePanel />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemContainerStyle>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                </Style>
                                            </ItemsControl.ItemContainerStyle>
                                        </ItemsControl>
                                    </StackPanel>

                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IsLargeImageVisible" Value="False"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImageBorder" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                   <Setter TargetName="IconContent" Property="Tag" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />

                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </MultiTrigger>

                                <Trigger Property="IsPressed" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource DisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                                    <Setter TargetName="PART_Label" Property="Margin" Value="0,10,0,2" />
                                    <Setter Property="MinHeight" TargetName="IconContent" Value="48"/>
                                    <Setter Property="MinWidth" TargetName="IconContent" Value="48"/>
                                    <Setter TargetName="OuterBorder" Property="MinHeight" Value="100" />
                                    <Setter TargetName="OuterBorder" Property="MinWidth" Value="60" />
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="BorderThickness" Value="{StaticResource MaterialLight.BorderThickness}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Border x:Name="OuterBorder"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    IsEnabled="{TemplateBinding IsEnabled}">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="PART_ImageBorder"
                                                Grid.Column="0"
                                                SnapsToDevicePixels="True">
                                        <ContentPresenter Name="IconContent" Height="20" Width="20" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                                    </Border>
                                    <Border 
                                            x:Name="textBorder"
                                            Grid.Column="1"
                                            Margin="7,0,0,0"
                                            Focusable="False">
                                        <TextBlock 
                                                x:Name="PART_Label" 
                                                Text="{TemplateBinding Label}" 
                                                FontFamily="{TemplateBinding FontFamily}" 
                                                VerticalAlignment="Center"
                                                FontSize="{TemplateBinding FontSize}"
                                                Foreground="{TemplateBinding Foreground}" />

                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                                </Trigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                   <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Width" Value="NaN"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Padding" Value="7,0,7,0"/>
                                </MultiTrigger>
                                <Trigger Property="SizeForm" Value="ExtraSmall">
                                    <Setter TargetName="textBorder" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </MultiTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource DisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                                    <Setter Property="Padding" Value="5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonButtonStyle}" TargetType="{x:Type tools:RibbonButton}" />
</ResourceDictionary>
