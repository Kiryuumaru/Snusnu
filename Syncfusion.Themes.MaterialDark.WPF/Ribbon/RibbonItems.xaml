<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:provider="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:tools="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF"
    xmlns:windows_shared="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <provider:ResourceDictionaryProvider DictionaryName="Common" ThemeName="MaterialDark"/>
        <provider:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="MaterialDark"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/Separator.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/TextBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/TextBlock.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/ComboBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/ListBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/Separator.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/RadioButton.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/CheckBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/GlyphDropdownExpander.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/MSControl/GlyphEditableDropdownExpander.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDark.WPF;component/Ribbon/RibbonButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--  RibbonAutomatableTextBlock Style  -->
    <Style x:Key="SyncfusionRibbonAutomatableTextBlockStyle" BasedOn="{StaticResource WPFTextBlockStyle}" TargetType="{x:Type tools:RibbonAutomatableTextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDark.ThemeFontFamily}"/>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonAutomatableTextBlockStyle}" TargetType="{x:Type tools:RibbonAutomatableTextBlock}"/>

    <!--  RibbonComboBoxItem Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxItemStyle"
        BasedOn="{StaticResource WPFComboBoxItemStyle}"
        TargetType="{x:Type tools:RibbonComboBoxItem}"/>
    <Style BasedOn="{StaticResource SyncfusionRibbonComboBoxItemStyle}" TargetType="{x:Type tools:RibbonComboBoxItem}" />

    <!--  RibbonComboBox Editable ToggleButton Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxGlyphEditableToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.BorderThickness}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ToggleButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border"  
                            Background="{TemplateBinding Background}"       
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource MaterialDark.ThemeCornerRadiusVariant1}">
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"                                          
                                          Width="9.5" Height="7"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                            <ContentPresenter.Content>
                                <Path Name="Arrow" 
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5,0.5">
                                    <Path.Margin>
                                                <Thickness>0,0,0,2</Thickness>
                                    </Path.Margin>
                                    <Path.Data>
                                                <PathGeometry>M 0 0 L 3.5 4 L 7 0 Z</PathGeometry>
                                    </Path.Data>
                                </Path>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="MinHeight" Value="{StaticResource MaterialDark.TouchMinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                                    <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                                    <Setter Property="RenderTransform" TargetName="Arrow">
                                        <Setter.Value>
                                            <RotateTransform Angle="180"  />
                                        </Setter.Value>
                                    </Setter>
                        </Trigger>
                        <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                            <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                            <Setter Property="RenderTransform" TargetName="Arrow">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"  />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconDisabledColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RibbonComboBox ToggleButton Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxGlyphToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant1}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ToggleButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border"  
                            Background="{TemplateBinding Background}"       
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource MaterialDark.ThemeCornerRadiusVariant1}">
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          Width="9.5" Height="7"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                            <ContentPresenter.Content>
                                <Path Name="Arrow"   
                                  Margin="0" 
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                                <PathGeometry>M 0 0 L 3.5 4 L 7 0 Z</PathGeometry>
                                    </Path.Data>
                                </Path>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="MinHeight" Value="{StaticResource MaterialDark.TouchMinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                                    <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                                    <Setter Property="RenderTransform" TargetName="Arrow">
                                        <Setter.Value>
                                            <RotateTransform Angle="180"  />
                                        </Setter.Value>
                                    </Setter>
                        </Trigger>
                        <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                            <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                            <Setter Property="RenderTransform" TargetName="Arrow">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"  />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconDisabledColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RibbonComboBox Editable Template  -->
    <ControlTemplate x:Key="SyncfusionEditableRibbonComboBoxControlTemplate" TargetType="{x:Type tools:RibbonComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"  
                   Grid.ColumnSpan="2" 
                   AllowsTransparency="true" 
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom"
                   SnapsToDevicePixels="True">
                <Border x:Name="DropDownBorder" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                        MinWidth="{Binding ActualWidth, ElementName=Placement}"
                        BorderBrush="{StaticResource Border}" 
                        BorderThickness="{StaticResource MaterialDark.BorderThickness}"
                        Background="{StaticResource PopupBackground}" 
                        Effect="{StaticResource Default.ShadowDepth3}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid>
                            <Canvas HorizontalAlignment="Left" 
                                    VerticalAlignment="Top" 
                                    Height="0" 
                                    Width="0">
                                <Rectangle x:Name="OpaqueRect" 
                                           Fill="{Binding Background, ElementName=DropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"></Border>
            <ToggleButton x:Name="PART_ToggleButton" 
                          Grid.ColumnSpan="2"
                          Width="15"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource SyncfusionRibbonComboBoxGlyphEditableToggleButtonStyle}"
                          Margin="1"
                          Height="16"
                          HorizontalAlignment="Right">
            </ToggleButton>
            <TextBox x:Name="PART_EditableTextBox" 
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                     Margin="1,2,0,2" 
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     Style="{StaticResource ComboBoxEditableTextBox}">
                <TextBox.Padding>
                            <Thickness>0</Thickness>
                </TextBox.Padding>
            </TextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="TextElement.Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource ContentForeground}"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="PART_EditableTextBox"  Value="{StaticResource ContentForeground}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt2}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" SourceName="PART_ToggleButton" Value="true"/>
                    <Condition Property="IsFocused" SourceName="PART_EditableTextBox" Value="True"/>
                </MultiTrigger.Conditions>
                        <Setter Property="Margin" TargetName="PART_ToggleButton" Value="0,0,1,1"/>
            </MultiTrigger>
            <Trigger Property="IsFocused" SourceName="PART_EditableTextBox" Value="True">
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource ContentForeground}" />
                <Setter Property="Background" TargetName="Border" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant2}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource ContentForeground}" />
                <Setter Property="Background" TargetName="Border" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant2}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="DropDownBorder" Value="14,0,14,14"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="Border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt}"/>
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource DisabledForeground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--  RibbonComboBox Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxStyle" TargetType="{x:Type tools:RibbonComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant1}"/>
        <Setter Property="Padding">
            <Setter.Value>
                        <Thickness>3,2,2,2</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily"
                Value="{StaticResource MaterialDark.ThemeFontFamily}"/>
        <Setter Property="FontSize"
                Value="{StaticResource MaterialDark.BodyTextStyle}"/>
        <Setter Property="FontWeight"
                Value="{StaticResource MaterialDark.FontWeightNormal}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                               Grid.ColumnSpan="2"
                               StaysOpen="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"                            
                               AllowsTransparency="true"
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               Placement="Bottom"
                               SnapsToDevicePixels="True">
                            <Border x:Name="DropDownBorder" 
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    BorderBrush="{StaticResource Border}"
                                    SnapsToDevicePixels="True"
                                    Background="{StaticResource PopupBackground}"
                                    BorderThickness="{StaticResource MaterialDark.BorderThickness}"
                                    Effect="{StaticResource Default.ShadowDepth3}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid>
                                        <Canvas HorizontalAlignment="Left"
                                                VerticalAlignment="Top" 
                                                Height="0" 
                                                Width="0">
                                            <Rectangle x:Name="OpaqueRect" 
                                                        Fill="{Binding Background, ElementName=DropDownBorder}" 
                                                        Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                                        Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" 
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <Border x:Name="Border" 
                                Grid.ColumnSpan="2" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ToggleButton x:Name="PART_ToggleButton" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource SyncfusionRibbonComboBoxGlyphToggleButtonStyle}"
                                      HorizontalContentAlignment="Right"
                                      Margin="0,0,3,0"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                     
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="DropDownBorder" Value="14,0,14,14"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="MinHeight" Value="{StaticResource MaterialDark.TouchMinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt2}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant2}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant2}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource Border}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}"/>
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template" Value="{StaticResource SyncfusionEditableRibbonComboBoxControlTemplate}" />
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="1,4"/>
                <Setter Property="Margin" Value="5,4"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Height" Value="32"/>
                <Setter Property="Margin" Value="5"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="5,2"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonComboBoxStyle}" TargetType="{x:Type tools:RibbonComboBox}" />

    <!--  LabelTextBlock Style  -->
    <Style x:Key="SyncfusionLabelTextBlockStyle" TargetType="{x:Type tools:LabelTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,-2,0,0" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDark.ThemeFontFamily}"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Style.Triggers>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionLabelTextBlockStyle}" TargetType="{x:Type tools:LabelTextBlock}"/>

    <!--  RibbonListBox Style  -->
    <Style x:Key="SyncfusionRibbonListBoxStyle" BasedOn="{StaticResource WPFListBoxStyle}" TargetType="{x:Type tools:RibbonListBox}">
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.BorderThickness1}" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Height" Value="32"/>
                <Setter Property="Margin" Value="5,3"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Height" Value="NaN"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonListBoxStyle}" TargetType="{x:Type tools:RibbonListBox}"/>

    <!--  RibbonCheckBox Style  -->
    <Style x:Key="SyncfusionRibbonCheckBoxStyle" BasedOn="{StaticResource WPFCheckBoxStyle}" TargetType="{x:Type tools:RibbonCheckBox}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="8,8,15,6"/>
                <Setter Property="Margin" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="Visibility" Value="Visible"/>
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="10,12,15,8"/>
                <Setter Property="Margin" Value="12,0,0,0"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonCheckBoxStyle}" TargetType="{x:Type tools:RibbonCheckBox}" />

    <!--  RibbonRadioButton Style  -->
    <Style x:Key="SyncfusionRibbonRadioButtonStyle" BasedOn="{StaticResource WPFRadioButtonStyle}" TargetType="{x:Type tools:RibbonRadioButton}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="8,8,15,6"/>
                <Setter Property="Margin" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="Visibility" Value="Visible"/>
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="10,12,15,8"/>
                <Setter Property="Margin" Value="12,0,0,0"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonRadioButtonStyle}" TargetType="{x:Type tools:RibbonRadioButton}"/>

    <!--  RibbonSeparator Style  -->
    <Style x:Key="SyncfusionRibbonSeparatorStyle" TargetType="{x:Type tools:RibbonSeparator}">
        <Setter Property="Width" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonSeparator}">
                    <Rectangle
                        Width="1"
                        Height="55"
                        Fill="{StaticResource BorderAlt}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="3,5,3,0" />
        <Style.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="3,5,3,5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonSeparatorStyle}" TargetType="{x:Type tools:RibbonSeparator}" />

    <!--  RibbonTextBox Style  -->
    <Style x:Key="SyncfusionRibbonTextBoxStyle" BasedOn="{StaticResource WPFTextBoxStyle}"  TargetType="{x:Type tools:RibbonTextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDark.ThemeFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource MaterialDark.BodyTextStyle}" />
        <Setter Property="FontWeight" Value="{StaticResource MaterialDark.FontWeightNormal}" />
        <Setter Property="Padding" Value="2,3,2,2" />
        <Style.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="1,3,1,2"/>
                <Setter Property="Margin" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="Visibility" Value="Visible"/>
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderDark}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource BorderAlt2}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
                <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant2}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
                <Setter Property="BorderThickness" Value="{StaticResource MaterialDark.ThemeBorderThicknessVariant2}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="1,5"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonTextBoxStyle}" TargetType="{x:Type tools:RibbonTextBox}" />
</ResourceDictionary>
